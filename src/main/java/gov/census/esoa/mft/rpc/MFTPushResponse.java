/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package gov.census.esoa.mft.rpc;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MFTPushResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8637468519677571777L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MFTPushResponse\",\"namespace\":\"gov.census.esoa.mft.rpc\",\"fields\":[{\"name\":\"clientId\",\"type\":\"string\"},{\"name\":\"fileName\",\"type\":\"string\"},{\"name\":\"statusCode\",\"type\":\"int\"},{\"name\":\"consumedLength\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MFTPushResponse> ENCODER =
      new BinaryMessageEncoder<MFTPushResponse>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MFTPushResponse> DECODER =
      new BinaryMessageDecoder<MFTPushResponse>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MFTPushResponse> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MFTPushResponse> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MFTPushResponse>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MFTPushResponse to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MFTPushResponse from a ByteBuffer. */
  public static MFTPushResponse fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence clientId;
  @Deprecated public java.lang.CharSequence fileName;
  @Deprecated public int statusCode;
  @Deprecated public long consumedLength;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MFTPushResponse() {}

  /**
   * All-args constructor.
   * @param clientId The new value for clientId
   * @param fileName The new value for fileName
   * @param statusCode The new value for statusCode
   * @param consumedLength The new value for consumedLength
   */
  public MFTPushResponse(java.lang.CharSequence clientId, java.lang.CharSequence fileName, java.lang.Integer statusCode, java.lang.Long consumedLength) {
    this.clientId = clientId;
    this.fileName = fileName;
    this.statusCode = statusCode;
    this.consumedLength = consumedLength;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return clientId;
    case 1: return fileName;
    case 2: return statusCode;
    case 3: return consumedLength;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: clientId = (java.lang.CharSequence)value$; break;
    case 1: fileName = (java.lang.CharSequence)value$; break;
    case 2: statusCode = (java.lang.Integer)value$; break;
    case 3: consumedLength = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'clientId' field.
   * @return The value of the 'clientId' field.
   */
  public java.lang.CharSequence getClientId() {
    return clientId;
  }

  /**
   * Sets the value of the 'clientId' field.
   * @param value the value to set.
   */
  public void setClientId(java.lang.CharSequence value) {
    this.clientId = value;
  }

  /**
   * Gets the value of the 'fileName' field.
   * @return The value of the 'fileName' field.
   */
  public java.lang.CharSequence getFileName() {
    return fileName;
  }

  /**
   * Sets the value of the 'fileName' field.
   * @param value the value to set.
   */
  public void setFileName(java.lang.CharSequence value) {
    this.fileName = value;
  }

  /**
   * Gets the value of the 'statusCode' field.
   * @return The value of the 'statusCode' field.
   */
  public java.lang.Integer getStatusCode() {
    return statusCode;
  }

  /**
   * Sets the value of the 'statusCode' field.
   * @param value the value to set.
   */
  public void setStatusCode(java.lang.Integer value) {
    this.statusCode = value;
  }

  /**
   * Gets the value of the 'consumedLength' field.
   * @return The value of the 'consumedLength' field.
   */
  public java.lang.Long getConsumedLength() {
    return consumedLength;
  }

  /**
   * Sets the value of the 'consumedLength' field.
   * @param value the value to set.
   */
  public void setConsumedLength(java.lang.Long value) {
    this.consumedLength = value;
  }

  /**
   * Creates a new MFTPushResponse RecordBuilder.
   * @return A new MFTPushResponse RecordBuilder
   */
  public static gov.census.esoa.mft.rpc.MFTPushResponse.Builder newBuilder() {
    return new gov.census.esoa.mft.rpc.MFTPushResponse.Builder();
  }

  /**
   * Creates a new MFTPushResponse RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MFTPushResponse RecordBuilder
   */
  public static gov.census.esoa.mft.rpc.MFTPushResponse.Builder newBuilder(gov.census.esoa.mft.rpc.MFTPushResponse.Builder other) {
    return new gov.census.esoa.mft.rpc.MFTPushResponse.Builder(other);
  }

  /**
   * Creates a new MFTPushResponse RecordBuilder by copying an existing MFTPushResponse instance.
   * @param other The existing instance to copy.
   * @return A new MFTPushResponse RecordBuilder
   */
  public static gov.census.esoa.mft.rpc.MFTPushResponse.Builder newBuilder(gov.census.esoa.mft.rpc.MFTPushResponse other) {
    return new gov.census.esoa.mft.rpc.MFTPushResponse.Builder(other);
  }

  /**
   * RecordBuilder for MFTPushResponse instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MFTPushResponse>
    implements org.apache.avro.data.RecordBuilder<MFTPushResponse> {

    private java.lang.CharSequence clientId;
    private java.lang.CharSequence fileName;
    private int statusCode;
    private long consumedLength;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(gov.census.esoa.mft.rpc.MFTPushResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.clientId)) {
        this.clientId = data().deepCopy(fields()[0].schema(), other.clientId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fileName)) {
        this.fileName = data().deepCopy(fields()[1].schema(), other.fileName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.statusCode)) {
        this.statusCode = data().deepCopy(fields()[2].schema(), other.statusCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.consumedLength)) {
        this.consumedLength = data().deepCopy(fields()[3].schema(), other.consumedLength);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MFTPushResponse instance
     * @param other The existing instance to copy.
     */
    private Builder(gov.census.esoa.mft.rpc.MFTPushResponse other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.clientId)) {
        this.clientId = data().deepCopy(fields()[0].schema(), other.clientId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fileName)) {
        this.fileName = data().deepCopy(fields()[1].schema(), other.fileName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.statusCode)) {
        this.statusCode = data().deepCopy(fields()[2].schema(), other.statusCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.consumedLength)) {
        this.consumedLength = data().deepCopy(fields()[3].schema(), other.consumedLength);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'clientId' field.
      * @return The value.
      */
    public java.lang.CharSequence getClientId() {
      return clientId;
    }

    /**
      * Sets the value of the 'clientId' field.
      * @param value The value of 'clientId'.
      * @return This builder.
      */
    public gov.census.esoa.mft.rpc.MFTPushResponse.Builder setClientId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.clientId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'clientId' field has been set.
      * @return True if the 'clientId' field has been set, false otherwise.
      */
    public boolean hasClientId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'clientId' field.
      * @return This builder.
      */
    public gov.census.esoa.mft.rpc.MFTPushResponse.Builder clearClientId() {
      clientId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'fileName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFileName() {
      return fileName;
    }

    /**
      * Sets the value of the 'fileName' field.
      * @param value The value of 'fileName'.
      * @return This builder.
      */
    public gov.census.esoa.mft.rpc.MFTPushResponse.Builder setFileName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.fileName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'fileName' field has been set.
      * @return True if the 'fileName' field has been set, false otherwise.
      */
    public boolean hasFileName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'fileName' field.
      * @return This builder.
      */
    public gov.census.esoa.mft.rpc.MFTPushResponse.Builder clearFileName() {
      fileName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'statusCode' field.
      * @return The value.
      */
    public java.lang.Integer getStatusCode() {
      return statusCode;
    }

    /**
      * Sets the value of the 'statusCode' field.
      * @param value The value of 'statusCode'.
      * @return This builder.
      */
    public gov.census.esoa.mft.rpc.MFTPushResponse.Builder setStatusCode(int value) {
      validate(fields()[2], value);
      this.statusCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'statusCode' field has been set.
      * @return True if the 'statusCode' field has been set, false otherwise.
      */
    public boolean hasStatusCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'statusCode' field.
      * @return This builder.
      */
    public gov.census.esoa.mft.rpc.MFTPushResponse.Builder clearStatusCode() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'consumedLength' field.
      * @return The value.
      */
    public java.lang.Long getConsumedLength() {
      return consumedLength;
    }

    /**
      * Sets the value of the 'consumedLength' field.
      * @param value The value of 'consumedLength'.
      * @return This builder.
      */
    public gov.census.esoa.mft.rpc.MFTPushResponse.Builder setConsumedLength(long value) {
      validate(fields()[3], value);
      this.consumedLength = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'consumedLength' field has been set.
      * @return True if the 'consumedLength' field has been set, false otherwise.
      */
    public boolean hasConsumedLength() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'consumedLength' field.
      * @return This builder.
      */
    public gov.census.esoa.mft.rpc.MFTPushResponse.Builder clearConsumedLength() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MFTPushResponse build() {
      try {
        MFTPushResponse record = new MFTPushResponse();
        record.clientId = fieldSetFlags()[0] ? this.clientId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.fileName = fieldSetFlags()[1] ? this.fileName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.statusCode = fieldSetFlags()[2] ? this.statusCode : (java.lang.Integer) defaultValue(fields()[2]);
        record.consumedLength = fieldSetFlags()[3] ? this.consumedLength : (java.lang.Long) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MFTPushResponse>
    WRITER$ = (org.apache.avro.io.DatumWriter<MFTPushResponse>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MFTPushResponse>
    READER$ = (org.apache.avro.io.DatumReader<MFTPushResponse>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
